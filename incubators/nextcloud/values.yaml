## Global Docker image registry
## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value
##
# global:
#   imageRegistry:

## Nextcloud image version
## ref: https://hub.docker.com/r/wonderfall/nextcloud/tags/
##
image:
  registry: docker.io
  repository: wonderfall/nextcloud
  tag: 14
  ## Specify a imagePullPolicy
  ## Defaults to 'Always'. You can set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

##
## Init containers parameters:
## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
##
volumePermissions:
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: latest
    pullPolicy: Always

##
## Wait db container parameters:
## Wait db is online
##
waitDB:
  image:
    registry: docker.io
    repository: postgresql
    tag: latest
    pullPolicy: Always

## Domain to use during the Nextcloud setup
## ref: https://github.com/Wonderfall/docker-nextcloud
##
# domain:
domain: localhost


## Admin user of the application
## ref: https://github.com/Wonderfall/docker-nextcloud
##
adminUser: admin

## Admin application password
## Defaults to a random 10-character alphanumeric string if not set
## ref: https://github.com/Wonderfall/docker-nextcloud
##
# adminPassword:


## Nexcloud user id
## ref: https://github.com/Wonderfall/docker-nextcloud
##
uid: 1001

## Nexcloud group id
## ref: https://github.com/Wonderfall/docker-nextcloud
##
gid: 1001

## Nexcloud group id
## ref: https://github.com/Wonderfall/docker-nextcloud
## Defaults to 991
##
#gid: 

## Maximum upload size in Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
uploadMaxSize: 10G

## APC memory size for Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
apcShmSize: 128M

## Opcache memory size in megabytes for Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
opcacheMemSize: 128

## PHP memory limit for Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
memoryLimit: 512M

## Time interval between two cron tasks in Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
cronPeriod: 15m

## Memory limit for PHP when executing cronjobs in Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
cronMemoryLimit: 512M

## The system/log timezone for Nexcloud
## ref: https://github.com/Wonderfall/docker-nextcloud
##
tz: Etc/UTC

##
## External database configuration
##
externalDatabase:
  ## Database host
  # host:

  ## Database port
  # port:

  ## Database user
  # user: nexcloud

  ## Database password
  # password:

  ## Database name
  # database: nexcloud
  
  ## Database type
  # type: pgsql

##
## PostgreSQL chart configuration
##
## https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml
##
postgresql:
  ## Whether to deploy a postgresql server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: true
  ## Disable Postgresql replication
  replication:
    enabled: false

  ## Create a database and a database user
  ## 
  ##
  postgresqlDatabase: nextcloud
  postgresqlUsername: nextcloud
  #postgresqlPassword:
  

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    ## Postgresql data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Node, affinity and tolerations labels for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  affinity: {}
  tolerations: []
  
  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 1024Mi
      cpu: 500m

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer
## If you use ingress, you should set ClusterIP
##
service:
  type: LoadBalancer
  # HTTP Port
  port: 8888
  ## loadBalancerIP:
  ##
  ## nodePorts:
  ##   http: <to set explicitly, choose port between 30000-32767>
  nodePorts:
    http: ""
  ## Enable client source IP preservation
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster


## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## Nextcloud data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi
  path: /bitnami

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m
  limits:
    memory: 1024Mi
    cpu: 1000m

## Node, affinity and tolerations labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
nodeSelector: {}
affinity: {}
tolerations: []

## Optional duration in seconds the pod needs to terminate gracefully.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: 30

## Configure the ingress resource that allows you to access the
## Nextcloud installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
  - name: nextcloud.local

    ## Set this to true in order to enable TLS on the ingress record
    ## A side effect of this will be that the backend ghost service will be connected at port 443
    tls: false

    ## Set this to true in order to add the corresponding annotations for cert-manager
    certManager: false

    ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: nextcloud.local-tls

    ## Ingress annotations done as key:value pairs
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
    ##
    ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
    annotations:
    #  kubernetes.io/ingress.class: nginx
    #  certmanager.k8s.io/cluster-issuer: letsencrypt-prod

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: ghost.local-tls
  #   key:
#   certificate: